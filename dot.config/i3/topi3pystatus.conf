#!/usr/bin/python3
# -*- coding: utf-8 -*-
#
from datetime import timedelta, datetime

from i3pystatus import Status, IntervalModule
import yaml

with open('/home/max/.secrets/i3pystatus.yml') as f:
    secrets = yaml.safe_load(f)


foreground = "#C678FF"

status = Status()


__author__ = 'chestm007'


status.register(
    "disk",
    color=foreground,
    path="/",
    on_leftclick="pcmanfm",
    format="/ {avail}GB",
    interval=30
)

status.register(
    "disk",
    color=foreground,
    path="/home",
    on_leftclick="pcmanfm",
    format="/home {avail}GB",
    interval=30
)

status.register(
    "temp",
    color=foreground,
)

status.register(
    "nvidia_gpu",
    color=foreground,
    format="Usage: {usage}% || {temp}â„ƒ "
)

status.register(
    "docker",
    color=foreground,
)

status.register(
    'spotify',
    format='{artist} - {title} {status} ({song_elapsed} / {song_length})',
    color=foreground,
)

#travis_repo_status_map = {'passed': '<span color="#00af00">passed</span>',
#                          'started': '<span color="#0000af">started</span>',
#                          'failed': '<span color="#af0000">failed</span>'}
#
#
#github_token = secrets.get('github').get('token')
#status.register(
#    'travisci',
#    github_token=github_token,
#    hints={'markup': 'pango'},
#    repo_status_map=travis_repo_status_map,
#    format='py_hydropi/{repo_status} [({last_build_finished})]',
#    repo_slug='chestm007/py_hydropi',
#    time_format='%m/%d-%H:%M'
#)
#
#status.register(
#    'travisci',
#    github_token=github_token,
#    hints={'markup': 'pango'},
#    repo_status_map=travis_repo_status_map,
#    format='Slack/{repo_status} [({last_build_finished})]',
#    repo_slug='chestm007/py_slack_terminal',
#    time_format='%m/%d-%H:%M'
#)
#
#status.register(
#    'travisci',
#    github_token=github_token,
#    hints={'markup': 'pango'},
#    repo_status_map=travis_repo_status_map,
#    format='Riing/{repo_status} [({last_build_finished})]',
#    repo_slug='chestm007/linux_thermaltake_riing',
#    time_format='%m/%d-%H:%M'
#)

status.run()
